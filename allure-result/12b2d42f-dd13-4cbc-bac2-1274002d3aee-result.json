{"name": "Посмотреть краткое содержание корзины", "status": "broken", "statusDetails": {"message": "json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)", "trace": "@allure.epic(\"Тестирование API\")\n    @allure.feature(\"Позитивные проверки\")\n    @allure.title(\"Посмотреть краткое содержание корзины\")\n    @allure.description(\"В результате теста проверяется в ответе на запрос\\\n        краткого содержания пустой корзины, приходит что число товаров 0\\\n            , а в списке товаров - возвращается пустой список\")\n    @allure.severity(\"critical\")\n    def test_positive_view_short_contents_of_empty_cart():\n        with allure.step(\"Создать объект класса ApiClass\"):\n            api = ApiClass()\n        with allure.step(\"Очистить корзину\"):\n            api.delete_cart()\n        with allure.step(\"Запросить краткое содержание корзины\"):\n>           empty_cart = api.get_short_contents_of_cart()\n\ntests\\test_api.py:144: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests\\class_for_tests\\ApiClass.py:162: in get_short_contents_of_cart\n    data_resp = json.loads(request)\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\json\\__init__.py:346: in loads\n    return _default_decoder.decode(s)\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\json\\decoder.py:344: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x000001C651B906E0>\ns = '<!DOCTYPE html><html><head><title>DDoS-Guard</title><meta charset=\"utf-8\"><meta name=\"viewport\" content=\"width=device...<span id=\"request-info\"></span></div></div><script src=\"/.well-known/ddos-guard/geoblocked.js\"></script></body></html>'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n            obj, end = self.scan_once(s, idx)\n        except StopIteration as err:\n>           raise JSONDecodeError(\"Expecting value\", s, err.value) from None\nE           json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\json\\decoder.py:362: JSONDecodeError"}, "description": "В результате теста проверяется в ответе на запрос    краткого содержания пустой корзины, приходит что число товаров 0        , а в списке товаров - возвращается пустой список", "steps": [{"name": "Создать объект класса ApiClass", "status": "passed", "start": 1738055841599, "stop": 1738055841599}, {"name": "Очистить корзину", "status": "passed", "steps": [{"name": "Создать объект класса DataForTests", "status": "passed", "start": 1738055841599, "stop": 1738055841599}, {"name": "Создать объект класса ApiClass", "status": "passed", "steps": [{"name": "Добавить headers", "status": "passed", "attachments": [{"name": "Используемый токен", "source": "26c5f539-7213-4f68-8e33-c007dbffa8ab-attachment.attach"}, {"name": "Передаваемые headers", "source": "79fdeccd-901b-481b-ab1b-85002dd096ef-attachment.attach"}], "start": 1738055841599, "stop": 1738055841601}], "start": 1738055841599, "stop": 1738055841601}, {"name": "Создать запрос для очищения корзины", "status": "passed", "start": 1738055841601, "stop": 1738055841721}], "start": 1738055841599, "stop": 1738055841722}, {"name": "Запросить краткое содержание корзины", "status": "broken", "statusDetails": {"message": "json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n", "trace": "  File \"c:\\Users\\DEXP\\Desktop\\Diploma work on automation\\Diploma-work-on-automation\\tests\\test_api.py\", line 144, in test_positive_view_short_contents_of_empty_cart\n    empty_cart = api.get_short_contents_of_cart()\n  File \"C:\\Users\\DEXP\\Desktop\\Diploma work on automation\\Diploma-work-on-automation\\tests\\class_for_tests\\ApiClass.py\", line 162, in get_short_contents_of_cart\n    data_resp = json.loads(request)\n  File \"C:\\Users\\DEXP\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\json\\__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n           ~~~~~~~~~~~~~~~~~~~~~~~^^^\n  File \"C:\\Users\\DEXP\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\json\\decoder.py\", line 344, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n               ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\DEXP\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\json\\decoder.py\", line 362, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\n"}, "steps": [{"name": "Создать объект класса DataForTests", "status": "passed", "start": 1738055841722, "stop": 1738055841722}, {"name": "Создать объект класса ApiClass", "status": "passed", "steps": [{"name": "Добавить headers", "status": "passed", "attachments": [{"name": "Используемый токен", "source": "98516c8d-71f9-480e-8d1e-45eb1677359d-attachment.attach"}, {"name": "Передаваемые headers", "source": "ef840bcc-d6e3-44cb-bd9b-564d4aefe9fa-attachment.attach"}], "start": 1738055841722, "stop": 1738055841723}], "start": 1738055841722, "stop": 1738055841724}, {"name": "Создать запрос для получения                краткого содержания корзины", "status": "passed", "start": 1738055841724, "stop": 1738055841852}], "start": 1738055841722, "stop": 1738055841853}], "start": 1738055841599, "stop": 1738055841858, "uuid": "d6970299-e899-4a11-9af7-dac77e6cd4a6", "historyId": "72b690d4a768b534703945f258614867", "testCaseId": "72b690d4a768b534703945f258614867", "fullName": "tests.test_api#test_positive_view_short_contents_of_empty_cart", "labels": [{"name": "feature", "value": "Позитивные проверки"}, {"name": "epic", "value": "Тестирование API"}, {"name": "severity", "value": "critical"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_api"}, {"name": "host", "value": "DESKTOP-Q56RGJ9"}, {"name": "thread", "value": "19096-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_api"}]}